---
# tasks file for roles/nextcloud
- name: üë§ Creates user
  ansible.builtin.user:
    state: present
    name: "{{ nextcloud_user_name }}"
    uid: "{{ nextcloud_uid }}"
    create_home: false
    group: "{{ app_gid }}"
  become: true

- name: üìÇ Creates service path
  ansible.builtin.file:
    path: "{{ nextcloud_service_path }}"
    state: directory
    mode: "0750"
    owner: "{{ nextcloud_uid }}"
    group: "{{ app_gid }}"
  become: true

- name: üìÇ Creates volumes
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0700"
    owner: "{{ nextcloud_uid }}"
    group: "{{ app_gid }}"
  loop:
    - "{{ nextcloud_volume_mariadb }}"
    - "{{ nextcloud_volume_keydb }}"
    - "{{ nextcloud_volume_onlyoffice }}"
    - "{{ nextcloud_volume_fonts }}"
  become: true

- name: üìÇ Creates Nextcloud volume
  ansible.builtin.file:
    path: "{{ nextcloud_volume_nextcloud }}"
    state: directory
    mode: "0700"
    owner: "33"
    group: "{{ app_gid }}"
  become: true

- name: ‚¨ÜÔ∏è Pushes compose file
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ nextcloud_service_path }}/docker-compose.yml"
    owner: "{{ nextcloud_uid }}"
    group: "{{ app_gid }}"
    mode: "0750"
  become: true

- name: ‚¨ÜÔ∏è Pushes Caddy config
  ansible.builtin.template:
    src: nextcloud.caddy.j2
    dest: "{{ caddy_sites }}/nextcloud.caddy"
    mode: "0770"
    group: "{{ app_gid }}"
  notify: reload caddy

- name: ‚¨ÜÔ∏è Pushes fonts
  ansible.builtin.copy:
    src: files/fonts
    dest: "{{ nextcloud_volume_fonts }}"
    owner: "{{ nextcloud_uid }}"
    group: "{{ app_gid }}"
    mode: "0774"
  become: true
  notify: restart onlyoffice

- name: üöÄ Sets up cron job
  ansible.builtin.cron:
    name: Nextcloud cron
    minute: "*/5"
    job: docker exec -u 33 {{ nextcloud_nextcloud_container_name }} php -f /var/www/html/cron.php
    user: root
    state: present
  become: true

- name: üöÄ Starts container stack
  community.docker.docker_compose_v2:
    project_src: "{{ nextcloud_service_path }}"
    state: present

- include_role:
    name: cronjob
    public: no
  vars:
    cronjob_name: nextcloud app update
    cronjob_special_time: daily
    cronjob_command:  docker exec -it -u www-data nextcloud-nextcloud php occ app:update --all --no-interaction
    cronjob_user: "root"
    cronjob_notification_avatar: "https://cdn.jsdelivr.net/gh/selfhst/icons/png/nextcloud.png"
    cronjob_notification_as: Nextcloud App Update (daily)
