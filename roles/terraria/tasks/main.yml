---
# tasks file for roles/terraria
- name: 📂 Creates service directory
  ansible.builtin.file:
    path: "{{ terraria_service_path }}"
    state: directory
    mode: "0755"
    owner: "{{ app_uid }}"
    group: "{{ app_gid }}"
  become: true

- name: 📂 Creates source directory
  ansible.builtin.file:
    path: "{{ terraria_sources }}"
    state: directory
    mode: "0750"
    owner: "{{ docker_build_user }}"
    group: "docker"
  become: true

- name: ⬇️ Gets Docker sources
  ansible.builtin.git:
    dest: "{{ terraria_sources }}"
    repo: https://github.com/ryansheehan/terraria.git
    refspec: master
    version: 4ec38460726a3df60aa629185a38e2b24315d4c1
    single_branch: true
    update: false
  become: true
  become_user: "{{ docker_build_user }}"

- name: 🔨 Replaces version in Dockerfile
  ansible.builtin.replace:
    path: "{{ terraria_sources }}/tshock/Dockerfile"
    regexp: "(ENV TSHOCKVERSION=v5.2.3)"
    replace: "ENV TSHOCKVERSION=v{{ terraria_tshock_version }}"
  become: true

- name: 🔨 Builds image
  # Run command instead of docker_image_build so that we don't have to maintain
  # a separate command in the cronjob.
  ansible.builtin.command: "{{ terraria_build_command }}"
  become: true
  become_user: "{{ docker_build_user }}"
  changed_when: true

- name: 🚀 Sets up rebuild cronjob
  ansible.builtin.cron:
    name: "{{ terraria_build_cronjob_name }}"
    special_time: "weekly"
    job: "{{ terraria_build_command }}"
    user: "{{ docker_build_user }}"
    state: present
  become: true

- name: 📂 Creates volumes
  ansible.builtin.file:
    path: "{{ terraria_volume_world }}"
    state: directory
    mode: "0700"
    owner: "{{ app_uid }}"
    group: "{{ app_gid }}"
  become: true

- name: ⬆️ Pushes Config file
  ansible.builtin.template:
    src: config.json.j2
    dest: "{{ terraria_volume_world }}/config.json"
    mode: "700"
    owner: "{{ app_uid }}"
    group: "{{ app_gid }}"
  become: true

- name: 🚀 Starts container
  community.docker.docker_container:
    name: "{{ terraria_container_name }}"
    image: "{{ terraria_image_name }}"
    state: started
    restart_policy: unless-stopped
    ports:
      - "{{ terraria_port }}:{{ terraria_port }}"
    volumes:
      - "{{ terraria_volume_world }}:/root/.local/share/Terraria/Worlds"
    env:
      WORLD_FILENAME: "{{ terraria_world_name }}.wld"
    command:
      - "-config /root/.local/share/Terraria/Worlds/config.json"
      - "-world /root/.local/share/Terraria/Worlds/{{ terraria_world_name }}.wld"
      - "-difficulty 0"
