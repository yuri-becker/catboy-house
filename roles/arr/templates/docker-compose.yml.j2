networks:
  "{{ arr_network }}":
    name: "{{ arr_network }}"
  "{{ seedbox_slskd_network }}":
    name: "{{ seedbox_slskd_network }}"
    external: true

services:
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: "{{ arr_sonarr_container_name }}"
    restart: unless-stopped
    networks:
      - "{{ arr_network }}"
    ports:
      - "{{ docker_gateway }}:{{ arr_sonarr_port }}:8989"
    volumes:
      - "{{ arr_volume_sonarr }}:/config"
      - "{{ downloads_path }}:/downloads"
      - "{{ tv_path }}:/tv"
      - "/dev/rtc:/dev/rtc"
    environment:
      PUID: "{{ app_uid }}"
      PGID: "{{ app_gid }}"

  radarr:
    image: linuxserver/radarr:latest
    container_name: "{{ arr_radarr_container_name }}"
    restart: unless-stopped
    networks:
      - "{{ arr_network }}"
    ports:
      - "{{ docker_gateway }}:{{ arr_radarr_port }}:7878"
    volumes:
      - "{{ arr_volume_radarr }}:/config"
      - "{{ downloads_path }}:/downloads"
      - "{{ movies_path }}:/movies"
    environment:
      PUID: "{{ app_uid }}"
      PGID: "{{ app_gid }}"

  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: "{{ arr_prowlarr_container_name }}"
    depends_on:
      - sonarr
      - radarr
    restart: unless-stopped
    networks:
      - "{{ arr_network }}"
    ports:
      - "{{ docker_gateway }}:{{ arr_prowlarr_port }}:9696"
    volumes:
      - "{{ arr_volume_prowlarr }}:/config"
    environment:
      PUID: "{{ app_uid }}"
      PGID: "{{ app_gid }}"

  bazarr:
    image: linuxserver/bazarr:latest
    container_name: "{{ arr_bazarr_container_name }}"
    depends_on:
      - sonarr
      - radarr
    restart: unless-stopped
    networks:
      - "{{ arr_network }}"
    ports:
      - "{{ docker_gateway }}:{{ arr_bazarr_port }}:6767"
    volumes:
      - "{{ arr_volume_bazarr }}:/config"
      - "{{ movies_path }}:/movies"
      - "{{ tv_path }}:/tv"
    environment:
      PUID: "{{ app_uid }}"
      PGID: "{{ app_gid }}"

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: "{{ arr_jellyseerr_container_name }}"
    restart: unless-stopped
    networks:
      - "{{ arr_network }}"
    ports:
      - "{{ docker_gateway }}:{{ arr_jellyseerr_port }}:5055"
    volumes:
      - "{{ arr_volume_jellyseerr }}:/app/config"
    environment:
      LOG_LEVEL: info
      TZ: "{{ ansible_date_time.tz }}"

  lidarr:
    image: linuxserver/lidarr:latest
    container_name: "{{ arr_lidarr_container_name }}"
    restart: unless-stopped
    networks:
      - "{{ arr_network }}"
    ports:
      - "{{ docker_gateway }}:{{ arr_lidarr_port}}:8686"
    volumes:
      - "{{ arr_volume_lidarr }}:/config"
      - "{{ music_path }}:/music"
      - "{{ downloads_music_path }}:/downloads"
    environment:
      TZ: "{{ ansible_date_time.tz }}"
      PUID: "{{ app_uid }}"
      PGID: "{{ app_gid }}"

##  Disabled until https://github.com/Lidarr/Lidarr/issues/5498 is fixed.
##  soularr:
##    image: mrusse08/soularr:latest
##    container_name: "{{ arr_soularr_container_name }}"
##    restart: unless-stopped
##    networks:
##      - "{{ arr_network }}"
##      - "{{ seedbox_slskd_network }}"
##    user: "{{ app_uid }}:{{ app_gid }}"
##    volumes:
##      - "{{ downloads_music_path }}:/downloads"
##      - "{{ arr_volume_soularr }}:/data"
##    environment:
##      TZ: "{{ ansible_date_time.tz }}"
##      PUID: "{{ app_uid }}"
##      PGID: "{{ app_gid }}"
##      SCRIPT_INTERVAL: 30

  lidify:
    image: thewicklowwolf/lidify:latest
    container_name: "{{ arr_lidify_container_name }}"
    restart: unless-stopped
    networks:
      - "{{ arr_network }}"
    ports:
      - "{{ docker_gateway }}:{{ arr_lidify_port }}:5000"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "{{ arr_volume_lidify }}:/lidify/config"
      - "{{ music_path }}:/music"
    environment:
      TZ: "{{ ansible_date_time.tz }}"
      PUID: "{{ app_uid }}"
      PGID: "{{ app_gid }}"
      lidarr_address: "http://lidarr:8686"
      lidarr_api_key: "{{ arr_lidarr_api_key }}"
      root_folder_path: /music
      search_for_missing_albums: "False"
      mode: "LastFM"
      last_fm_api_key: "{{ lastfm_api_key }}"
      last_fm_api_secret: "{{ lastfm_api_secret }}"
